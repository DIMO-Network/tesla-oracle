definitions:
  apitypes.Type:
    properties:
      name:
        type: string
      type:
        type: string
    type: object
  apitypes.TypedData:
    properties:
      domain:
        $ref: '#/definitions/apitypes.TypedDataDomain'
      message:
        $ref: '#/definitions/apitypes.TypedDataMessage'
      primaryType:
        type: string
      types:
        $ref: '#/definitions/apitypes.Types'
    type: object
  apitypes.TypedDataDomain:
    properties:
      chainId:
        $ref: '#/definitions/math.HexOrDecimal256'
      name:
        type: string
      salt:
        type: string
      verifyingContract:
        type: string
      version:
        type: string
    type: object
  apitypes.TypedDataMessage:
    additionalProperties: true
    type: object
  apitypes.Types:
    additionalProperties:
      items:
        $ref: '#/definitions/apitypes.Type'
      type: array
    type: object
  fiber.Error:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  github_com_DIMO-Network_tesla-oracle_internal_models.DeviceDefinitionRes:
    properties:
      id:
        type: string
      make:
        type: string
      model:
        type: string
      year:
        type: integer
    type: object
  github_com_DIMO-Network_tesla-oracle_internal_models.NextAction:
    properties:
      endpoint:
        type: string
      method:
        type: string
    type: object
  github_com_DIMO-Network_tesla-oracle_internal_models.SubmitCommandResponse:
    properties:
      commandId:
        type: string
      message:
        type: string
      status:
        type: string
    type: object
  github_com_DIMO-Network_tesla-oracle_internal_models.TeslaVehicleRes:
    properties:
      definition:
        $ref: '#/definitions/github_com_DIMO-Network_tesla-oracle_internal_models.DeviceDefinitionRes'
      externalId:
        type: string
      vin:
        type: string
    type: object
  github_com_DIMO-Network_tesla-oracle_internal_models.VehicleStatusResponse:
    properties:
      action:
        type: string
      message:
        type: string
      next:
        $ref: '#/definitions/github_com_DIMO-Network_tesla-oracle_internal_models.NextAction'
    type: object
  github_com_DIMO-Network_tesla-oracle_internal_models.VirtualKeyStatusResponse:
    properties:
      added:
        type: boolean
      status:
        type: string
    type: object
  github_com_DIMO-Network_tesla-oracle_internal_service.OnboardedVehicle:
    properties:
      syntheticTokenId:
        type: integer
      vehicleTokenId:
        type: integer
      vin:
        type: string
    type: object
  github_com_DIMO-Network_tesla-oracle_internal_service.SacdInput:
    properties:
      expiration:
        type: integer
      grantee:
        items:
          type: integer
        type: array
      permissions:
        type: integer
      source:
        type: string
    type: object
  github_com_DIMO-Network_tesla-oracle_internal_service.VinStatus:
    properties:
      details:
        type: string
      status:
        description: Status `"Pending"`, `"Failure"`, `"Success"`
        type: string
      vin:
        type: string
    type: object
  github_com_DIMO-Network_tesla-oracle_internal_service.VinTransactionData:
    properties:
      sacd:
        $ref: '#/definitions/github_com_DIMO-Network_tesla-oracle_internal_service.SacdInput'
      signature:
        items:
          type: integer
        type: array
      typedData:
        $ref: '#/definitions/apitypes.TypedData'
      vin:
        type: string
    type: object
  github_com_DIMO-Network_tesla-oracle_internal_service.VinWithTokenID:
    properties:
      vehicleTokenId:
        type: integer
      vin:
        type: string
    type: object
  internal_controllers.CompleteOAuthExchangeRequest:
    properties:
      authorizationCode:
        type: string
      redirectUri:
        type: string
    type: object
  internal_controllers.CompleteOAuthExchangeResponseWrapper:
    properties:
      vehicles:
        items:
          $ref: '#/definitions/github_com_DIMO-Network_tesla-oracle_internal_models.TeslaVehicleRes'
        type: array
    type: object
  internal_controllers.FinalizeResponse:
    properties:
      vehicles:
        items:
          $ref: '#/definitions/github_com_DIMO-Network_tesla-oracle_internal_service.OnboardedVehicle'
        type: array
    type: object
  internal_controllers.MintDataForVins:
    properties:
      vinMintingData:
        items:
          $ref: '#/definitions/github_com_DIMO-Network_tesla-oracle_internal_service.VinTransactionData'
        type: array
    type: object
  internal_controllers.StatusForVinsResponse:
    properties:
      statuses:
        items:
          $ref: '#/definitions/github_com_DIMO-Network_tesla-oracle_internal_service.VinStatus'
        type: array
    type: object
  internal_controllers.SubmitCommandRequest:
    properties:
      command:
        type: string
    type: object
  internal_controllers.VinsGetParams:
    properties:
      vins:
        items:
          type: string
        type: array
    type: object
  internal_controllers.VinsVerifyParams:
    properties:
      vins:
        items:
          $ref: '#/definitions/github_com_DIMO-Network_tesla-oracle_internal_service.VinWithTokenID'
        type: array
    type: object
  math.HexOrDecimal256:
    type: object
info:
  contact: {}
  title: DIMO Tesla Oracle API
  version: "1.0"
paths:
  /v1/commands/{tokenID}:
    post:
      consumes:
      - application/json
      description: Submits a command to a Tesla vehicle using the provided vehicle
        token ID and command details.
      parameters:
      - description: Vehicle token ID that must be set in the request path to identify
          the vehicle
        in: path
        name: tokenID
        required: true
        type: string
      - description: Command details
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/internal_controllers.SubmitCommandRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Command submitted successfully
          schema:
            $ref: '#/definitions/github_com_DIMO-Network_tesla-oracle_internal_models.SubmitCommandResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/fiber.Error'
        "401":
          description: Unauthorized or vehicle does not belong to the authenticated
            user.
          schema:
            $ref: '#/definitions/fiber.Error'
        "404":
          description: Vehicle not found or failed to get vehicle by token ID.
          schema:
            $ref: '#/definitions/fiber.Error'
        "500":
          description: Internal server error, including command submission failures.
          schema:
            $ref: '#/definitions/fiber.Error'
      security:
      - BearerAuth: []
      summary: Submit command to Tesla vehicle
      tags:
      - tesla
  /v1/tesla/{vehicleTokenId}/status:
    get:
      consumes:
      - application/json
      description: Get vehicle status and determines the next action for a Tesla vehicle
        based on its fleet status, including telemetry compatibility, virtual key
        pairing, firmware version, and streaming toggle settings. Provides appropriate
        instructions or actions for the user to enable telemetry or resolve issues.
      parameters:
      - description: Vehicle token ID that must be set in the request path to fetch
          vehicle details
        in: path
        name: vehicleTokenId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Vehicle status details and next action
          schema:
            $ref: '#/definitions/github_com_DIMO-Network_tesla-oracle_internal_models.VehicleStatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/fiber.Error'
        "401":
          description: Unauthorized or no credentials found for the vehicle.
          schema:
            $ref: '#/definitions/fiber.Error'
        "404":
          description: Vehicle not found or failed to get vehicle by token ID.
          schema:
            $ref: '#/definitions/fiber.Error'
        "500":
          description: Internal server error, including decryption or fleet status
            retrieval failures.
          schema:
            $ref: '#/definitions/fiber.Error'
      security:
      - BearerAuth: []
      summary: Get vehicle status
      tags:
      - tesla
  /v1/tesla/{vehicleTokenId}/status/admin:
    get:
      consumes:
      - application/json
      description: Gets information about vehicle status for admin users. Bypasses
        ownership validation.
      parameters:
      - description: Vehicle Token ID
        in: path
        name: vehicleTokenId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_DIMO-Network_tesla-oracle_internal_models.VehicleStatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/fiber.Error'
        "401":
          description: Unauthorized or no credentials found for the vehicle.
          schema:
            $ref: '#/definitions/fiber.Error'
        "404":
          description: Vehicle not found or failed to get vehicle by token ID.
          schema:
            $ref: '#/definitions/fiber.Error'
        "500":
          description: Internal server error, including decryption or fleet status
            retrieval failures.
          schema:
            $ref: '#/definitions/fiber.Error'
      security:
      - BearerAuth: []
      summary: Get vehicle status (Admin)
      tags:
      - tesla
  /v1/tesla/settings:
    get:
      description: Get config params for frontend app
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - BearerAuth: []
      summary: Get tesla-related configuration parameters
      tags:
      - Settings
  /v1/tesla/telemetry/{vehicleTokenId}/start:
    post:
      consumes:
      - application/json
      description: Initiates the data flow for a Tesla vehicle using the provided
        vehicle token ID.
      parameters:
      - description: Vehicle token ID that must be set in the request path to fetch
          vehicle details
        in: path
        name: vehicleTokenId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully started data flow for the vehicle.
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/fiber.Error'
        "401":
          description: Unauthorized or vehicle does not belong to the authenticated
            user.
          schema:
            $ref: '#/definitions/fiber.Error'
        "404":
          description: Vehicle not found or failed to get vehicle by token ID.
          schema:
            $ref: '#/definitions/fiber.Error'
        "409":
          description: Vehicle is not ready for telemetry subscription. Call GetStatus
            endpoint to determine next steps.
          schema:
            $ref: '#/definitions/fiber.Error'
        "500":
          description: Internal server error, including decryption or fleet status
            retrieval failures.
          schema:
            $ref: '#/definitions/fiber.Error'
      security:
      - BearerAuth: []
      summary: Start data flow for Tesla vehicle
      tags:
      - tesla
  /v1/tesla/telemetry/subscribe/{vehicleTokenId}:
    post:
      consumes:
      - application/json
      description: Subscribes a vehicle for telemetry data using the provided vehicle
        token ID in the request path.
      parameters:
      - description: Vehicle token ID that must be set in the request path to fetch
          vehicle details
        in: path
        name: vehicleTokenId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully subscribed to vehicle telemetry.
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/fiber.Error'
        "401":
          description: Unauthorized or invalid developer license.
          schema:
            $ref: '#/definitions/fiber.Error'
        "404":
          description: Vehicle not found or failed to get vehicle by VIN.
          schema:
            $ref: '#/definitions/fiber.Error'
        "409":
          description: Vehicle is not ready for telemetry subscription.
          schema:
            $ref: '#/definitions/fiber.Error'
        "500":
          description: Internal server error, including decryption or telemetry subscription
            failures.
          schema:
            $ref: '#/definitions/fiber.Error'
      security:
      - BearerAuth: []
      summary: Subscribe vehicle for Tesla Telemetry Data
      tags:
      - telemetry
  /v1/tesla/telemetry/unsubscribe/{vehicleTokenId}:
    post:
      consumes:
      - application/json
      description: Unsubscribes a vehicle from telemetry data using the provided vehicle
        token ID.
      parameters:
      - description: OnboardingService Token ID
        in: path
        name: vehicleTokenId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully unsubscribed from telemetry data.
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/fiber.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/fiber.Error'
        "404":
          description: OnboardingService not found or owner information is missing.
          schema:
            $ref: '#/definitions/fiber.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/fiber.Error'
      security:
      - BearerAuth: []
      summary: Unsubscribe vehicle from Tesla Telemetry Data
      tags:
      - telemetry
  /v1/tesla/vehicles:
    post:
      consumes:
      - application/json
      description: Gets Tesla vehicles owned by the user. Creates initial onboarding
        records for all of them.
      parameters:
      - description: Authorization details
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/internal_controllers.CompleteOAuthExchangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.CompleteOAuthExchangeResponseWrapper'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/fiber.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/fiber.Error'
        "424":
          description: Failed Dependency
          schema:
            $ref: '#/definitions/fiber.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/fiber.Error'
      security:
      - BearerAuth: []
      summary: Get user vehicles
      tags:
      - tesla
  /v1/tesla/virtual-key:
    get:
      consumes:
      - application/json
      description: Gets information about Tesla virtual key.
      parameters:
      - description: Vehicle VIN
        in: query
        name: vin
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_DIMO-Network_tesla-oracle_internal_models.VirtualKeyStatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/fiber.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/fiber.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/fiber.Error'
      security:
      - BearerAuth: []
      summary: Get virtual key status
      tags:
      - tesla
  /v1/vehicle/finalize:
    post:
      consumes:
      - application/json
      description: Finalizes onboarding process, returns minted token IDs
      parameters:
      - description: VINs to finalize
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/internal_controllers.VinsGetParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.FinalizeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/fiber.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/fiber.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/fiber.Error'
      security:
      - BearerAuth: []
      summary: Finalize onboarding
      tags:
      - onboarding
      - mint
  /v1/vehicle/mint:
    get:
      consumes:
      - application/json
      description: Gets minting payload for signing. Only `typedData` field is populated
        in the response.
      parameters:
      - collectionFormat: csv
        description: VINs
        in: query
        items:
          type: string
        name: vins
        required: true
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: Only `typedData` field is populated for each item
          schema:
            $ref: '#/definitions/internal_controllers.MintDataForVins'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/fiber.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/fiber.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/fiber.Error'
      security:
      - BearerAuth: []
      summary: Get minting payload for signing
      tags:
      - onboarding
      - mint
    post:
      consumes:
      - application/json
      description: Submits signed data and sacd and triggers minting job start.
      parameters:
      - description: Signed typed data and sacd for minting
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/internal_controllers.MintDataForVins'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.StatusForVinsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/fiber.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/fiber.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/fiber.Error'
      security:
      - BearerAuth: []
      summary: Submit signed data and sacd to mint
      tags:
      - onboarding
      - mint
  /v1/vehicle/mint/status:
    get:
      consumes:
      - application/json
      description: Gets status of minting jobs for provided VINs. Can be polled to
        wait for all minting jobs.
      parameters:
      - collectionFormat: csv
        description: VINs
        in: query
        items:
          type: string
        name: vins
        required: true
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.StatusForVinsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/fiber.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/fiber.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/fiber.Error'
      security:
      - BearerAuth: []
      summary: Get minting status
      tags:
      - onboarding
      - mint
  /v1/vehicle/verify:
    post:
      consumes:
      - application/json
      description: Verifies vehicle before onboarding. In case of already minted vehicle
        checks ownership, synthetic token ID (should be empty), etc.
      parameters:
      - description: Vehicles to verify
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/internal_controllers.VinsVerifyParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.StatusForVinsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/fiber.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/fiber.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/fiber.Error'
      security:
      - BearerAuth: []
      summary: Verify vehicle before onboarding
      tags:
      - onboarding
      - verify
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
