// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: pkg/grpc/tesla_oracle.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterNewSyntheticDeviceRequest struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Vin                    string                 `protobuf:"bytes,1,opt,name=vin,proto3" json:"vin,omitempty"`
	SyntheticDeviceAddress []byte                 `protobuf:"bytes,2,opt,name=synthetic_device_address,json=syntheticDeviceAddress,proto3" json:"synthetic_device_address,omitempty"`
	WalletChildNum         uint64                 `protobuf:"varint,3,opt,name=wallet_child_num,json=walletChildNum,proto3" json:"wallet_child_num,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RegisterNewSyntheticDeviceRequest) Reset() {
	*x = RegisterNewSyntheticDeviceRequest{}
	mi := &file_pkg_grpc_tesla_oracle_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNewSyntheticDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNewSyntheticDeviceRequest) ProtoMessage() {}

func (x *RegisterNewSyntheticDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_tesla_oracle_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNewSyntheticDeviceRequest.ProtoReflect.Descriptor instead.
func (*RegisterNewSyntheticDeviceRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_tesla_oracle_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterNewSyntheticDeviceRequest) GetVin() string {
	if x != nil {
		return x.Vin
	}
	return ""
}

func (x *RegisterNewSyntheticDeviceRequest) GetSyntheticDeviceAddress() []byte {
	if x != nil {
		return x.SyntheticDeviceAddress
	}
	return nil
}

func (x *RegisterNewSyntheticDeviceRequest) GetWalletChildNum() uint64 {
	if x != nil {
		return x.WalletChildNum
	}
	return 0
}

type RegisterNewSyntheticDeviceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterNewSyntheticDeviceResponse) Reset() {
	*x = RegisterNewSyntheticDeviceResponse{}
	mi := &file_pkg_grpc_tesla_oracle_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNewSyntheticDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNewSyntheticDeviceResponse) ProtoMessage() {}

func (x *RegisterNewSyntheticDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_tesla_oracle_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNewSyntheticDeviceResponse.ProtoReflect.Descriptor instead.
func (*RegisterNewSyntheticDeviceResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_tesla_oracle_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterNewSyntheticDeviceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetSyntheticDeviceByVINRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vin           string                 `protobuf:"bytes,1,opt,name=vin,proto3" json:"vin,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSyntheticDeviceByVINRequest) Reset() {
	*x = GetSyntheticDeviceByVINRequest{}
	mi := &file_pkg_grpc_tesla_oracle_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSyntheticDeviceByVINRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyntheticDeviceByVINRequest) ProtoMessage() {}

func (x *GetSyntheticDeviceByVINRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_tesla_oracle_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyntheticDeviceByVINRequest.ProtoReflect.Descriptor instead.
func (*GetSyntheticDeviceByVINRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_tesla_oracle_proto_rawDescGZIP(), []int{2}
}

func (x *GetSyntheticDeviceByVINRequest) GetVin() string {
	if x != nil {
		return x.Vin
	}
	return ""
}

type GetSyntheticDeviceByVINResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SyntheticDevices []*SyntheticDevice     `protobuf:"bytes,1,rep,name=synthetic_devices,json=syntheticDevices,proto3" json:"synthetic_devices,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetSyntheticDeviceByVINResponse) Reset() {
	*x = GetSyntheticDeviceByVINResponse{}
	mi := &file_pkg_grpc_tesla_oracle_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSyntheticDeviceByVINResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSyntheticDeviceByVINResponse) ProtoMessage() {}

func (x *GetSyntheticDeviceByVINResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_tesla_oracle_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSyntheticDeviceByVINResponse.ProtoReflect.Descriptor instead.
func (*GetSyntheticDeviceByVINResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_tesla_oracle_proto_rawDescGZIP(), []int{3}
}

func (x *GetSyntheticDeviceByVINResponse) GetSyntheticDevices() []*SyntheticDevice {
	if x != nil {
		return x.SyntheticDevices
	}
	return nil
}

type SyntheticDevice struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Vin                    string                 `protobuf:"bytes,1,opt,name=vin,proto3" json:"vin,omitempty"`
	SyntheticDeviceAddress []byte                 `protobuf:"bytes,2,opt,name=synthetic_device_address,json=syntheticDeviceAddress,proto3" json:"synthetic_device_address,omitempty"`
	WalletChildNum         uint64                 `protobuf:"varint,3,opt,name=wallet_child_num,json=walletChildNum,proto3" json:"wallet_child_num,omitempty"`
	VehicleTokenId         uint64                 `protobuf:"varint,4,opt,name=vehicle_token_id,json=vehicleTokenId,proto3" json:"vehicle_token_id,omitempty"`
	SyntheticTokenId       uint64                 `protobuf:"varint,5,opt,name=synthetic_token_id,json=syntheticTokenId,proto3" json:"synthetic_token_id,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SyntheticDevice) Reset() {
	*x = SyntheticDevice{}
	mi := &file_pkg_grpc_tesla_oracle_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyntheticDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyntheticDevice) ProtoMessage() {}

func (x *SyntheticDevice) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_tesla_oracle_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyntheticDevice.ProtoReflect.Descriptor instead.
func (*SyntheticDevice) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_tesla_oracle_proto_rawDescGZIP(), []int{4}
}

func (x *SyntheticDevice) GetVin() string {
	if x != nil {
		return x.Vin
	}
	return ""
}

func (x *SyntheticDevice) GetSyntheticDeviceAddress() []byte {
	if x != nil {
		return x.SyntheticDeviceAddress
	}
	return nil
}

func (x *SyntheticDevice) GetWalletChildNum() uint64 {
	if x != nil {
		return x.WalletChildNum
	}
	return 0
}

func (x *SyntheticDevice) GetVehicleTokenId() uint64 {
	if x != nil {
		return x.VehicleTokenId
	}
	return 0
}

func (x *SyntheticDevice) GetSyntheticTokenId() uint64 {
	if x != nil {
		return x.SyntheticTokenId
	}
	return 0
}

var File_pkg_grpc_tesla_oracle_proto protoreflect.FileDescriptor

var file_pkg_grpc_tesla_oracle_proto_rawDesc = string([]byte{
	0x0a, 0x1b, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x74, 0x65, 0x73, 0x6c, 0x61,
	0x5f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x74,
	0x65, 0x73, 0x6c, 0x61, 0x5f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x21,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x77, 0x53, 0x79, 0x6e, 0x74, 0x68,
	0x65, 0x74, 0x69, 0x63, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x76, 0x69, 0x6e, 0x12, 0x38, 0x0a, 0x18, 0x73, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x74, 0x69, 0x63,
	0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x16, 0x73, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x74, 0x69, 0x63,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a,
	0x10, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x22, 0x3e, 0x0a, 0x22, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x65, 0x77, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x74, 0x69, 0x63, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x32, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x6e, 0x74, 0x68, 0x65, 0x74, 0x69, 0x63, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x56,
	0x49, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x69, 0x6e, 0x22, 0x6d, 0x0a, 0x1f, 0x47,
	0x65, 0x74, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x74, 0x69, 0x63, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x42, 0x79, 0x56, 0x49, 0x4e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a,
	0x0a, 0x11, 0x73, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x74, 0x69, 0x63, 0x5f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x65, 0x73, 0x6c,
	0x61, 0x5f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x74,
	0x69, 0x63, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x10, 0x73, 0x79, 0x6e, 0x74, 0x68, 0x65,
	0x74, 0x69, 0x63, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0xdf, 0x01, 0x0a, 0x0f, 0x53,
	0x79, 0x6e, 0x74, 0x68, 0x65, 0x74, 0x69, 0x63, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x76, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x69, 0x6e,
	0x12, 0x38, 0x0a, 0x18, 0x73, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x74, 0x69, 0x63, 0x5f, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x16, 0x73, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x74, 0x69, 0x63, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x43, 0x68, 0x69, 0x6c,
	0x64, 0x4e, 0x75, 0x6d, 0x12, 0x28, 0x0a, 0x10, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x12, 0x73, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x74, 0x69, 0x63, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x73, 0x79, 0x6e, 0x74,
	0x68, 0x65, 0x74, 0x69, 0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x32, 0x86, 0x02, 0x0a,
	0x0b, 0x54, 0x65, 0x73, 0x6c, 0x61, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x12, 0x7f, 0x0a, 0x1a,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x77, 0x53, 0x79, 0x6e, 0x74, 0x68,
	0x65, 0x74, 0x69, 0x63, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x2e, 0x74, 0x65, 0x73,
	0x6c, 0x61, 0x5f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x4e, 0x65, 0x77, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x74, 0x69, 0x63, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x74, 0x65,
	0x73, 0x6c, 0x61, 0x5f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x65, 0x77, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x74, 0x69, 0x63, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x74, 0x69, 0x63, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x42, 0x79, 0x56, 0x49, 0x4e, 0x12, 0x2c, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61,
	0x5f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x74, 0x68,
	0x65, 0x74, 0x69, 0x63, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x56, 0x49, 0x4e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x5f, 0x6f,
	0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x74, 0x68, 0x65, 0x74,
	0x69, 0x63, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x42, 0x79, 0x56, 0x49, 0x4e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x49, 0x4d, 0x4f, 0x2d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2f, 0x74, 0x65, 0x73, 0x6c, 0x61, 0x2d, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_pkg_grpc_tesla_oracle_proto_rawDescOnce sync.Once
	file_pkg_grpc_tesla_oracle_proto_rawDescData []byte
)

func file_pkg_grpc_tesla_oracle_proto_rawDescGZIP() []byte {
	file_pkg_grpc_tesla_oracle_proto_rawDescOnce.Do(func() {
		file_pkg_grpc_tesla_oracle_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_grpc_tesla_oracle_proto_rawDesc), len(file_pkg_grpc_tesla_oracle_proto_rawDesc)))
	})
	return file_pkg_grpc_tesla_oracle_proto_rawDescData
}

var file_pkg_grpc_tesla_oracle_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_pkg_grpc_tesla_oracle_proto_goTypes = []any{
	(*RegisterNewSyntheticDeviceRequest)(nil),  // 0: tesla_oracle.RegisterNewSyntheticDeviceRequest
	(*RegisterNewSyntheticDeviceResponse)(nil), // 1: tesla_oracle.RegisterNewSyntheticDeviceResponse
	(*GetSyntheticDeviceByVINRequest)(nil),     // 2: tesla_oracle.GetSyntheticDeviceByVINRequest
	(*GetSyntheticDeviceByVINResponse)(nil),    // 3: tesla_oracle.GetSyntheticDeviceByVINResponse
	(*SyntheticDevice)(nil),                    // 4: tesla_oracle.SyntheticDevice
}
var file_pkg_grpc_tesla_oracle_proto_depIdxs = []int32{
	4, // 0: tesla_oracle.GetSyntheticDeviceByVINResponse.synthetic_devices:type_name -> tesla_oracle.SyntheticDevice
	0, // 1: tesla_oracle.TeslaOracle.RegisterNewSyntheticDevice:input_type -> tesla_oracle.RegisterNewSyntheticDeviceRequest
	2, // 2: tesla_oracle.TeslaOracle.GetSyntheticDeviceByVIN:input_type -> tesla_oracle.GetSyntheticDeviceByVINRequest
	1, // 3: tesla_oracle.TeslaOracle.RegisterNewSyntheticDevice:output_type -> tesla_oracle.RegisterNewSyntheticDeviceResponse
	3, // 4: tesla_oracle.TeslaOracle.GetSyntheticDeviceByVIN:output_type -> tesla_oracle.GetSyntheticDeviceByVINResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_grpc_tesla_oracle_proto_init() }
func file_pkg_grpc_tesla_oracle_proto_init() {
	if File_pkg_grpc_tesla_oracle_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_grpc_tesla_oracle_proto_rawDesc), len(file_pkg_grpc_tesla_oracle_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_grpc_tesla_oracle_proto_goTypes,
		DependencyIndexes: file_pkg_grpc_tesla_oracle_proto_depIdxs,
		MessageInfos:      file_pkg_grpc_tesla_oracle_proto_msgTypes,
	}.Build()
	File_pkg_grpc_tesla_oracle_proto = out.File
	file_pkg_grpc_tesla_oracle_proto_goTypes = nil
	file_pkg_grpc_tesla_oracle_proto_depIdxs = nil
}
