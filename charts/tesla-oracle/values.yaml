replicaCount: 1
image:
  repository: dimozone/tesla-oracle
  pullPolicy: IfNotPresent
  tag: 851f475
imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''
serviceAccount:
  create: true
  annotations: {}
  name: ''
podAnnotations: {}
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1001
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - all
env:
  LOG_LEVEL: debug
  ENVIRONMENT: dev
  MON_PORT: '8888'
  WEB_PORT: '8080'
  GRPC_PORT: '8086'
  CHAIN_ID: 80002
  ENABLE_CONTRACT_EVENT_CONSUMER: true
  CONTRACT_EVENT_TOPIC: topic.contract.event
  KAFKA_BROKERS: kafka-dev-dimo-kafka-kafka-brokers:9092
  DB_PORT: '5432'
  DB_NAME: tesla_oracle
  DB_MAX_OPEN_CONNECTIONS: '10'
  DB_MAX_IDLE_CONNECTIONS: '3'
  DB_SSL_MODE: require
service:
  type: ClusterIP
  ports:
    mon-http:
      port: 8888
      targetPort: mon-http
      protocol: TCP
    web-http:
      port: 8080
      targetPort: web-http
      protocol: TCP
    grpc:
      port: 8086
      targetPort: grpc
      protocol: TCP
ports:
  - name: mon-http
    containerPort: 8888
    protocol: TCP
  - name: web-http
    containerPort: 8080
    protocol: TCP
  - name: grpc
    containerPort: 8086
    protocol: TCP
livenessProbe:
  httpGet:
    path: /
    port: mon-http
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1
readinessProbe:
  httpGet:
    path: /
    port: mon-http
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1
ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/auth-tls-secret: ingress/cf-origin-ca
    nginx.ingress.kubernetes.io/auth-tls-verify-client: 'on'
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/cors-allow-origin: https://tesla-oracle.dev.dimo.zone, https://app.dev.dimo.zone
    external-dns.alpha.kubernetes.io/hostname: tesla-oracle.dev.dimo.zone
  hosts:
    - host: tesla-oracle.dev.dimo.zone
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
resources:
  limits:
    cpu: 250m
    memory: 256Mi
  requests:
    cpu: 50m
    memory: 128Mi
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
nodeSelector: {}
tolerations: []
affinity: {}
podDisruptionBudget:
  minAvailable: 0
kafka:
  clusterName: kafka-dev-dimo-kafka
  topics: []
serviceMonitor:
  enabled: true
  path: /metrics
  port: mon-http
  interval: 30s
